import socket
import threading

# 存储客户端连接和昵称的字典
clients = {}

# 处理客户端消息
def handle_client(client_socket, client_address):
    nickname = client_socket.recv(1024).decode().strip()
    clients[client_socket] = nickname
    print(f"{nickname} connected from {client_address}")

    while True:
        try:
            message = client_socket.recv(1024).decode().strip()
            if message.startswith('@'):
                recipient, message = message.split(':', 1)
                send_private_message(nickname, recipient[1:], message)
            else:
                broadcast_message(nickname, message)
        except Exception as e:
            print(f"Error: {e}")
            del clients[client_socket]
            client_socket.close()
            break

# 发送广播消息
def broadcast_message(sender, message):
    for client_socket in clients:
        if client_socket != sender:
            client_socket.send(f"{sender}: {message}".encode())

# 发送私密消息
def send_private_message(sender, recipient, message):
    for client_socket, nickname in clients.items():
        if nickname == recipient:
            client_socket.send(f"@{sender}: {message}".encode())

# 启动服务器
def start_server():
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind(('0.0.0.0', 9999))
    server.listen(5)
    print("Server started, listening for connections...")

    while True:
        client_socket, client_address = server.accept()
        client_handler = threading.Thread(target=handle_client, args=(client_socket, client_address))
        client_handler.start()

if __name__ == "__main__":
    start_server()

//
import socket

def connect_to_server():
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect(('127.0.0.1', 9999))

    # 设置昵称
    nickname = input("Enter your nickname: ").strip()
    client_socket.send(nickname.encode())

    # 接收并显示来自服务器的消息
    while True:
        try:
            message = client_socket.recv(1024).decode().strip()
            print(message)
        except Exception as e:
            print(f"Error: {e}")
            client_socket.close()
            break

if __name__ == "__main__":
    connect_to_server()
