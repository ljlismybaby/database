import psycopg2
from psycopg2 import sql

# Function to establish a connection to the PostgreSQL database
def connect_to_db():
    try:
        # Change these values to match your PostgreSQL configuration
        conn = psycopg2.connect(
            dbname="your_database_name",
            user="your_username",
            password="your_password",
            host="your_host",
            port="your_port"
        )
        print("Connected to the database.")
        return conn
    except psycopg2.Error as e:
        print("Error connecting to the database:", e)
        return None

# Function to read student information from the database based on student number
def read_student_info(conn, student_number):
    try:
        cursor = conn.cursor()
        cursor.execute(sql.SQL("SELECT * FROM student WHERE student_number = %s;"), (student_number,))
        student_info = cursor.fetchone()
        if student_info:
            print("Student information:")
            print(student_info)
        else:
            print("Student not found.")
    except psycopg2.Error as e:
        print("Error reading student information:", e)

# Function to insert new student information into the database
def insert_student_info(conn, student_number, name, age, gender, department_name):
    try:
        cursor = conn.cursor()
        cursor.execute(sql.SQL("SELECT * FROM student WHERE student_number = %s;"), (student_number,))
        existing_student = cursor.fetchone()
        if existing_student:
            print("Student number already exists. Please enter a different student number.")
            return
        cursor.execute(
            sql.SQL("INSERT INTO student (student_number, name, age, gender, department_name) VALUES (%s, %s, %s, %s, %s);"),
            (student_number, name, age, gender, department_name)
        )
        conn.commit()
        print("Student information inserted successfully.")
    except psycopg2.Error as e:
        print("Error inserting student information:", e)

# Function to update student information in the database
def update_student_info(conn, student_number, new_name, new_age, new_gender, new_department_name):
    try:
        cursor = conn.cursor()
        cursor.execute(sql.SQL("SELECT * FROM student WHERE student_number = %s;"), (student_number,))
        student_info = cursor.fetchone()
        if not student_info:
            print("Student not found.")
            return
        update_query = sql.SQL("UPDATE student SET name = %s, age = %s, gender = %s, department_name = %s WHERE student_number = %s;")
        cursor.execute(update_query, (new_name, new_age, new_gender, new_department_name, student_number))
        conn.commit()
        print("Student information updated successfully.")
    except psycopg2.Error as e:
        print("Error updating student information:", e)

# Function to delete student information from the database
def delete_student_info(conn, student_number):
    try:
        cursor = conn.cursor()
        cursor.execute(sql.SQL("SELECT * FROM student WHERE student_number = %s;"), (student_number,))
        student_info = cursor.fetchone()
        if not student_info:
            print("Student not found.")
            return
        cursor.execute(sql.SQL("DELETE FROM student WHERE student_number = %s;"), (student_number,))
        conn.commit()
        print("Student information deleted successfully.")
    except psycopg2.Error as e:
        print("Error deleting student information:", e)

# Main function to execute operations
def main():
    # Connect to the database
    conn = connect_to_db()
    if not conn:
        return

    while True:
        print("\nChoose an operation:")
        print("1. Read student information")
        print("2. Insert new student information")
        print("3. Update student information")
        print("4. Delete student information")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            student_number = input("Enter student number: ")
            read_student_info(conn, student_number)
        elif choice == "2":
            student_number = input("Enter student number: ")
            name = input("Enter name: ")
            age = int(input("Enter age: "))
            gender = input("Enter gender: ")
            department_name = input("Enter department name: ")
            insert_student_info(conn, student_number, name, age, gender, department_name)
        elif choice == "3":
            student_number = input("Enter student number: ")
            read_student_info(conn, student_number)
            new_name = input("Enter new name: ")
            new_age = int(input("Enter new age: "))
            new_gender = input("Enter new gender: ")
            new_department_name = input("Enter new department name: ")
            update_student_info(conn, student_number, new_name, new_age, new_gender, new_department_name)
        elif choice == "4":
            student_number = input("Enter student number: ")
            delete_student_info(conn, student_number)
        elif choice == "5":
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 5.")

    conn.close()
    print("Connection to the database closed.")

if __name__ == "__main__":
    main()
